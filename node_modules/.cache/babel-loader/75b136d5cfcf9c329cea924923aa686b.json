{"ast":null,"code":"var _jsxFileName = \"/Users/csuarez/Desktop/mui-test/src/components/ui/mainDrawerMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { SwipeableDrawer, List, ListItem, ListItemButton, Divider } from \"@mui/material\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\"; // styling\n\nimport { makeStyles } from \"@mui/styles\";\nimport theme from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  drawerMenuHolder: {\n    \"&.MuiDrawer-paper\": {\n      backgroundColor: theme.palette.common.blue\n    }\n  },\n  drawerItem: {\n    \"&.MuiListItemText-root\": { ...theme.typography.tab\n    }\n  },\n  estimate: {\n    \"&.MuiListItemText-root\": {\n      color: theme.palette.common.orange\n    }\n  },\n  menuIcon: {\n    color: \"white\"\n  },\n  iconMenuBtn: {\n    \"&.MuiIconButton-root\": {\n      marginLeft: \"auto\",\n      \"&:hover\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  }\n}));\n\nconst MainDrawerMenu = () => {\n  _s();\n\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const classes = useStyles(); // Responsive swipe on mobile\n\n  const iOS = typeof navigator !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const handleSelected = (e, selectedIndex) => {\n    setSelectedIndex(selectedIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n      classes: {\n        paper: classes.drawerMenuHolder\n      },\n      disableBackdropTransition: !iOS,\n      disableDiscovery: iOS,\n      open: isDrawerOpen,\n      onClose: () => {\n        setIsDrawerOpen(false);\n      },\n      onOpen: () => {\n        setIsDrawerOpen(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n          button: true,\n          component: Link,\n          to: \"/\",\n          onClick: event => {\n            setIsDrawerOpen(false);\n            handleSelected(event, 0);\n          },\n          selected: selectedIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: classes.drawerItem,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/services\",\n          onClick: () => {\n            setIsDrawerOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: classes.drawerItem,\n            children: \"Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/revolution\",\n          onClick: () => {\n            setIsDrawerOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: classes.drawerItem,\n            children: \"Revolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/about\",\n          onClick: () => {\n            setIsDrawerOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: classes.drawerItem,\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/contact\",\n          onClick: () => {\n            setIsDrawerOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: classes.drawerItem,\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: \"/estimate\",\n          onClick: () => {\n            setIsDrawerOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            className: clsx(classes.drawerItem, classes.estimate),\n            children: \"Estimate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconMenuBtn,\n      onClick: () => {\n        setIsDrawerOpen(!isDrawerOpen);\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n        fontSize: \"large\",\n        className: classes.menuIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDrawerMenu, \"QS/1TOnlv18LLr+PgHLqg+b4Kh0=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainDrawerMenu;\nexport default MainDrawerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDrawerMenu\");","map":{"version":3,"names":["React","SwipeableDrawer","List","ListItem","ListItemButton","Divider","ListItemText","IconButton","MenuIcon","clsx","Link","makeStyles","theme","useStyles","drawerMenuHolder","backgroundColor","palette","common","blue","drawerItem","typography","tab","estimate","color","orange","menuIcon","iconMenuBtn","marginLeft","MainDrawerMenu","isDrawerOpen","setIsDrawerOpen","useState","selectedIndex","setSelectedIndex","classes","iOS","navigator","test","userAgent","handleSelected","e","paper","event"],"sources":["/Users/csuarez/Desktop/mui-test/src/components/ui/mainDrawerMenu.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemButton,\n  Divider,\n} from \"@mui/material\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport clsx from \"clsx\";\n\nimport { Link } from \"react-router-dom\";\n\n// styling\nimport { makeStyles, withStyles } from \"@mui/styles\";\nimport theme from \"./theme\";\n\nconst useStyles = makeStyles(() => ({\n  drawerMenuHolder: {\n    \"&.MuiDrawer-paper\": {\n      backgroundColor: theme.palette.common.blue,\n    },\n  },\n  drawerItem: {\n    \"&.MuiListItemText-root\": {\n      ...theme.typography.tab,\n    },\n  },\n  estimate: {\n    \"&.MuiListItemText-root\": {\n      color: theme.palette.common.orange,\n    },\n  },\n  menuIcon: {\n    color: \"white\",\n  },\n  iconMenuBtn: {\n    \"&.MuiIconButton-root\": {\n      marginLeft: \"auto\",\n      \"&:hover\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n  },\n}));\n\nconst MainDrawerMenu: React.FC = () => {\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const classes = useStyles();\n  // Responsive swipe on mobile\n  const iOS =\n    typeof navigator !== \"undefined\" &&\n    /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const handleSelected = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    selectedIndex: number\n  ) => {\n    setSelectedIndex(selectedIndex);\n  };\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        classes={{ paper: classes.drawerMenuHolder }}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={isDrawerOpen}\n        onClose={() => {\n          setIsDrawerOpen(false);\n        }}\n        onOpen={() => {\n          setIsDrawerOpen(true);\n        }}>\n        <List disablePadding>\n          <ListItemButton\n            button\n            component={Link}\n            to='/'\n            onClick={(event) => {\n              setIsDrawerOpen(false);\n              handleSelected(event, 0);\n            }}\n            selected={selectedIndex === 0}>\n            <ListItemText disableTypography className={classes.drawerItem}>\n              Home\n            </ListItemText>\n          </ListItemButton>\n          <ListItem\n            button\n            component={Link}\n            to='/services'\n            onClick={() => {\n              setIsDrawerOpen(false);\n            }}>\n            <ListItemText disableTypography className={classes.drawerItem}>\n              Services\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to='/revolution'\n            onClick={() => {\n              setIsDrawerOpen(false);\n            }}>\n            <ListItemText disableTypography className={classes.drawerItem}>\n              Revolution\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to='/about'\n            onClick={() => {\n              setIsDrawerOpen(false);\n            }}>\n            <ListItemText disableTypography className={classes.drawerItem}>\n              About\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to='/contact'\n            onClick={() => {\n              setIsDrawerOpen(false);\n            }}>\n            <ListItemText disableTypography className={classes.drawerItem}>\n              Contact Us\n            </ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem\n            button\n            component={Link}\n            to='/estimate'\n            onClick={() => {\n              setIsDrawerOpen(false);\n            }}>\n            <ListItemText\n              disableTypography\n              className={clsx(classes.drawerItem, classes.estimate)}>\n              Estimate\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.iconMenuBtn}\n        onClick={() => {\n          setIsDrawerOpen(!isDrawerOpen);\n        }}>\n        <MenuIcon fontSize='large' className={classes.menuIcon} />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n\nexport default MainDrawerMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}